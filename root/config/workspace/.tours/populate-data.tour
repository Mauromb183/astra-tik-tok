{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "5. Populate Data",
  "nextTour": "6. Hook Everything Together",
  "steps": [
    {
      "title": "Import data from data.json",
      "file": "astra-tik-tok/functions/addData.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 31,
          "character": 5
        }
      },
      "description": "## Update addData.js\n\nUpdate the addData.js file so it pulls from data.json using fs() instead of having hard coded values.\n\n```jsx\nconst fs = import('fs')\nconst { createClient } = require(\"@astrajs/collections\")\n\nconst collection = 'posts'\n\nexports.handler = async function (event, context, callback) {\n    const fs = require('fs')\n      const astraClient = await createClient({\n       astraDatabaseId: process.env.ASTRA_DB_ID,\n       astraDatabaseRegion: process.env.ASTRA_DB_REGION,\n       applicationToken: process.env.ASTRA_DB_APPLICATION_TOKEN,\n     });\n\n  const posts = astraClient\n    .namespace(process.env.ASTRA_DB_KEYSPACE)\n    .collection(collection)\n\n  const data = JSON.parse(fs.readFileSync('/config/resources/data.json'))\n    \n  try {\n        for (let i = 0; i < data.length; i++) {\n          await posts.create(data[i].id.toString(), data[i])\n        }\n\n        return {\n            statusCode: 200,\n        }\n    } catch (e) {\n        console.error(e);\n        return {\n            statusCode: 500,\n            body: JSON.stringify(e),\n        }\n    }\n}  \n```",
      "line": 34
    },
    {
      "title": "Import the data and check the results",
      "description": "## Import the Data\n\nStart the server:\n\n>> netlify dev\n\nFirst, visit the [addData](http://localhost:8888/.netlify/functions/addData) endpoint to upload the data.\n\nThen, check [post](http://localhost:8888/.netlify/functions/post) to make sure the new information is there."
    }
  ]
}