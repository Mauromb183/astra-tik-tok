{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "2. Start Building a React app",
  "nextTour": "3. Netlify",
  "commands": [
    "workbench.action.terminal.newWithCwd?[{\"cwd\":\"/opt/workspace/astra-tik-tok\"}]"
  ],
  "steps": [
    {
      "file": "astra-tik-tok/src/index.js",
      "title": "Update index.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 18,
          "character": 1
        }
      },
<<<<<<< HEAD
      "description": "## index.js File\n\nYou won't be using the \"reportWebVitals\" function, so let's get rid of it entirely.\n\n```jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n```",
      "line": 77
=======
      "description": "## Edit boilerplate React files\nFirst, we're going to make a few edits to the `create-react-app` boilerplate code. Let's start with `index.js`.\n\n---\n\n### Edit index.js\n\nYou won't be using the \"reportWebVitals\" function, so let's get rid of it entirely.\n\n```jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n```",
      "line": 88
>>>>>>> 2a2508289dcfeb86d53d76251b0fe889a96b256d
    },
    {
      "file": "astra-tik-tok/src/App.js",
      "title": "Update App.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 26,
          "character": 1
        }
      },
<<<<<<< HEAD
      "description": "Replace App.js content with the minimal component information.\n\n```jsx\nimport './App.css'\nconst App = () => {\n  return (\n    <div className=\"App\">\n    </div>\n  );\n}\nexport default App\n```\n",
      "line": 63
=======
      "description": "## App.js\nNext, we'll remove all the example content from our main file, `App.js`.\n\n---\n\n### Edit App.js\nReplace App.js content with the minimal component information.\n\n```jsx\nimport './App.css'\nconst App = () => {\n  return (\n    <div className=\"App\">\n    </div>\n  );\n}\nexport default App\n```\n",
      "line": 70
>>>>>>> 2a2508289dcfeb86d53d76251b0fe889a96b256d
    },
    {
      "title": "Install react-router-dom",
      "commands": [
        "workbench.action.terminal.newWithCwd?['cwd':'/config/workspace/astra-tik-tok']"
      ],
      "description": "## Routing Library\nFor this project, we'll be using a routing library called `react-router` that will help us handle page routing.\n\nInstall the `react-router-dom` package\n\n>> yarn add react-router-dom"
    },
    {
      "file": "astra-tik-tok/src/App.js",
      "title": "Add react-router-dom to App.js",
<<<<<<< HEAD
      "line": 1,
      "description": "Add the import statement for react-router-dom at the top of App.js\n\n```jsx\nimport { HashRouter, Route , Switch} from 'react-router-dom'\n\n```"
    },
    {
      "title": "Create the directory for the pages components",
      "description": "Create the directory for the pages components.\n\n>> mkdir -p src/pages; cp ../resources/Home.js src/pages; cp ../resources/Upload.js src/pages\n\n>> npm install faker\n"
=======
      "line": 2,
      "description": "## Import Routing Library\n\nNow we need to import the `react-router` library to use in our app.\n\n---\n\nAdd the import statement for react-router-dom at the top of App.js\n\n```jsx\nimport { HashRouter, Route , Switch} from 'react-router-dom'\n\n```"
    },
    {
      "title": "Create the directory for the pages components",
      "description": "## Creating Pages\n\nSo now lets create our basic pages for our app. We'll be making two pages, `Home.js` and `Upload.js`.\nFirst, we'll create a new directory for these pages.\n\n---\n\nCreate the directory for the pages components.\n\n>> mkdir -p src/pages; \n\n...and import some premade page files.\n\n>> cp ../resources/Home.js src/pages; cp ../resources/Upload.js src/pages\n"
>>>>>>> 2a2508289dcfeb86d53d76251b0fe889a96b256d
    },
    {
      "file": "astra-tik-tok/src/App.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 19
        }
      },
      "title": "Add routing magic to App.js",
<<<<<<< HEAD
      "description": "## Add structure to App.js\n\nIt's time to get App.js ready to do some real work.\n\nYou'll be making a few changes with this:\n* Importing the HashRouter, Route and Switch components\n* Adding a <Hashrouter> at the top of your App component\n* In the <Hashrouter>, inserting a Switch component to direct queries to the right place\n* Setting up routes for the home and upload pages.  Note you always want to have more specific routes (like /upload) first, then your more general matches later.  The first match \"wins\" so you can land in some frustration if you don't keep this in mind.\n\n```jsx\nimport { HashRouter, Route , Switch} from 'react-router-dom'\nimport Home from './pages/Home'\nimport Upload from './pages/Upload'\nimport './App.css'\n\nconst App = () => {\n  return (\n    <HashRouter>\n    <Switch>\n      <Route path= \"/upload\" component={Upload}/>\n      <Route path= \"/\" component={Home}/>\n    </Switch>\n  </HashRouter>\n  );\n}\n\nexport default App\n```",
      "line": 176
=======
      "description": "## Add structure to App.js\n\nIt's time to get App.js ready to do some real work.\n\nYou'll be making a few changes with this:\n* Importing the HashRouter, Route and Switch components\n* Adding a `<Hashrouter>` at the top of your App component\n* In the `<Hashrouter>`, inserting a Switch component to direct queries to the right place\n* Setting up routes for the home and upload pages.  Note you always want to have more specific routes (like /upload) first, then your more general matches later.  The first match \"wins\" so you can land in some frustration if you don't keep this in mind.\n\n```jsx\nimport { HashRouter, Route , Switch} from 'react-router-dom'\nimport Home from './pages/Home'\nimport Upload from './pages/Upload'\nimport './App.css'\n\nconst App = () => {\n  return (\n    <HashRouter>\n    <Switch>\n      <Route path= \"/upload\" component={Upload}/>\n      <Route path= \"/\" component={Home}/>\n    </Switch>\n  </HashRouter>\n  );\n}\n\nexport default App\n```",
      "line": 160
>>>>>>> 2a2508289dcfeb86d53d76251b0fe889a96b256d
    },
    {
      "title": "Adding content to components",
      "description": "# ⚒️ Adding some Content to the Components\n\nIn this step you will work with React Components to understand how they work, returning HTML via the render() function.  Header and FollowersColumn React Components will be created to use in our app.\n\n**Objectives**\n1. A Header that is going to be consistent for the upload page and the home page\n2. A FollowersColumn column where we can see people that we are currently following\n3. A feed and a little box of suggested accounts"
    },
    {
      "title": "Create components directory",
      "description": "## Components setup\n\nHere, we'll create the directory for the application components, and create two component files, `Header.js` and `FollowersColumn.js`.\n\n>> mkdir src/components; touch src/components/Header.js; touch src/components/FollowersColumn.js"
    },
    {
      "title": "Create Header file",
      "file": "astra-tik-tok/src/components/Header.js",
<<<<<<< HEAD
      "line": 81,
      "description": "Replace Header.js content with the minimal component information.\n\n```jsx\nconst Header = () => {\n    return (\n      <div className=\"header\">\n          <h1>Header</h1>\n      </div>\n    );\n  }\n  \nexport default Header\n```"
=======
      "line": 89,
      "description": "## Header.js\n\nLet's create a basic header. All this component is doing is rendering a styled div that contains our `<h1>` element.\n\n```jsx\nconst Header = () => {\n    return (\n      <div className=\"header\">\n          <h1>Header</h1>\n      </div>\n    );\n  }\n  \nexport default Header\n```"
>>>>>>> 2a2508289dcfeb86d53d76251b0fe889a96b256d
    },
    {
      "title": "Create FollowersColumn file",
      "file": "astra-tik-tok/src/components/FollowersColumn.js",
      "line": 81,
      "description": "## FollowersColumn.js\n\nSimilarly, this component will also be simple for now.\n\n```jsx\nconst FollowersColumn = () => {\n    return (\n      <div className=\"followers-column\">\n          <h1>FollowersColumn</h1>\n      </div>\n    );\n  }\n  \nexport default FollowersColumn\n```"
    },
    {
      "title": "Add Header to App.js",
      "file": "astra-tik-tok/src/App.js",
      "description": "# Import header into App.js\n\nLet's import our new components into `App.js` and use them.\n\n```jsx\nimport Header from './components/Header'\n```\n",
      "line": 5
    },
    {
      "title": "Add a Header to the App component, under the <HashRouter> tag.",
      "file": "astra-tik-tok/src/App.js",
      "description": "### Add header to the HashRouter component\n\n```jsx\n   <Header />\n   \n```\n",
      "line": 10
    },
    {
      "title": "Style your components",
      "description": "## Styling with CSS\n\nYou need to make your new components pretty.  We'll do this using CSS styles which we've already defined in our styled divs. For now, we're just going to get basic 'grey-box' styling in place. We'll improve the styling later.\n\n**Objectives**\n* Add the flex styling to the container\n* Make the feed white\n* Make the suggested-box blue. \n* Set the background-color to yellow in the header class\n* Set css attributes for the .followers-column class\n\n```jsx\n.App {\n  text-align: center;\n}\n\n.header {\n  background-color: yellow;\n}\n\n.followers-column {\n  background-color: red;\n  width: 500px;\n  height: 800px;\n}\n\n.header {\n    height: 60px;\n    width: 100%;\n    border-bottom: solid 1px rgb(227,227,228);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n}\n\n.container {\n  display: flex;\n  flex-direction: row;\n}\n\n.feed {\n  background-color: white;\n  width: 500px;\n}\n\n.suggested-box {\n  background-color: blue;\n  width: 400px;\n  height: 400px;\n}\n```",
      "file": "astra-tik-tok/src/App.css",
      "line": 1
    },
    {
      "file": "astra-tik-tok/src/pages/Home.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 26,
          "character": 20
        }
      },
      "description": "## Customize Home.js\n\nLet's import our `FollowersColumn.js` component into our `Home.js` page and break up the page into sections using our new styles.\n\n```jsx\nimport FollowersColumn from '../components/FollowersColumn'\n\nconst Home = () => {\n\n  return (\n    <>\n      <div className='container'>\n        <FollowersColumn />\n        <div className='feed'>\n  \n        </div>\n        <div className=\"suggested-box\">\n          <div className=\"section\">\n            <div className=\"suggested\">\n              <h2 className=\"bold\">Suggested accounts</h2>\n              <div className=\"break\" />\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n```",
      "line": 200
    },
    {
      "file": "astra-tik-tok/src/pages/Upload.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 41,
          "character": 2
        }
      },
      "description": "## Add Functionality to Upload.js\n\nIn the `Upload.js` page, we'll throw together a simple form that can be filled out. For now there will be plenty of filler information.\n\n```jsx\nimport React, { useState } from 'react'\n\n\nconst Upload = () => {\n  const username = 'aniak100'\n  const name = 'Ania Kubow'\n  const avatar = 'https://i.imgur.com/QwZod6m.png'\n\n  return (\n    <div className=\"upload-page\">\n        <br />\n        <h1>Upload video</h1>\n        <p>This video will be published to @{username}</p>\n        <div className='container'>\n          <form>\n            <div className='section'>\n              <div className=\"image-upload\"></div>\n              <div className=\"form-section\">\n                <div className='section input-section'>\n                  <label className=\"bold\">Caption</label>\n                  <input\n                    className='input'\n                    name='caption'\n                  />\n                </div>\n                <div className=\"break\"></div>\n                <div className='section input-section'>\n                  <label className=\"bold\">Video Url</label>\n                  <input\n                    className='input'\n                    name='video'\n                  />\n                </div>\n              </div>\n            </div>\t\t\t\n            <button>Post</button>\n          </form>\n        </div>\n    </div>\n  )\n}\n\nexport default Upload\n```",
      "line": 252
    },
    {
      "title": "Start the server",
      "description": "## Start the Development Server\n\nCongrats! We now have a basic framework of our app. Let's run the dev server and take a look.\n\n>> yarn start\n\n[Visit your site](http://localhost:3000)\n\nWhen you're done, press Ctrl-C in the terminal to stop the process so we can move to the next piece."
    }
  ]
}

