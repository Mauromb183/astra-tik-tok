{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "2. Start Building a React app",
  "nextTour": "3. Netlify",
  "commands": [
    "workbench.action.terminal.newWithCwd?[{\"cwd\":\"/opt/workspace/astra-tik-tok\"}]"
  ],
  "steps": [
    {
      "file": "astra-tik-tok/src/index.js",
      "title": "Update index.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 18,
          "character": 1
        }
      },
      "description": "## Edit boilerplate React files\nFirst, we're going to make a few edits to the `create-react-app` boilerplate code. Let's start with `index.js`.\n\n---\n\n### Edit index.js\n\nYou won't be using the \"reportWebVitals\" function, so let's get rid of it entirely.\n\n```jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n```",
      "line": 121
    },
    {
      "file": "astra-tik-tok/src/App.js",
      "title": "Update App.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 26,
          "character": 1
        }
      },
      "description": "## App.js\nNext, we'll remove all the example content from our main file, `App.js`.\n\n---\n\n### Edit App.js\nReplace App.js content with the minimal component information.\n\n```jsx\nimport './App.css'\nconst App = () => {\n  return (\n    <div className=\"App\">\n    </div>\n  );\n}\nexport default App\n```\n",
      "line": 91
    },
    {
      "title": "Install react-router-dom",
      "commands": [
        "workbench.action.terminal.newWithCwd?['cwd':'/config/workspace/astra-tik-tok']"
      ],
      "description": "## Routing Library\nFor this project, we'll be using a routing library called `react-router` that will help us handle page routing.\n\nInstall the `react-router-dom` package\n\n>> yarn add react-router-dom"
    },
    {
      "file": "astra-tik-tok/src/App.js",
      "title": "Add react-router-dom to App.js",
      "line": 3,
      "description": "## Import Routing Library\n\nNow we need to import the `react-router` library to use in our app.\n\n---\n\nAdd the import statement for react-router-dom at the top of App.js\n\n```jsx\nimport { HashRouter, Route , Switch} from 'react-router-dom'\n\n```"
    },
    {
      "title": "Create the directory for the pages components",
      "description": "## Creating Pages\n\nSo now lets create our basic pages for our app. We'll be making two pages, `Home.js` and `Upload.js`.\nFirst, we'll create a new directory for these pages.\n\n---\n\nCreate the directory for the pages components.\n\n>> mkdir -p src/pages; \n\n...and import some premade page files.  The files in src/pages will define different URLs on the site.\n\n>> cp /config/workspace/resources/Home.js /config/workspace/astra-tik-tok/src/pages\n\n>> cp /config/workspace/resources/Upload.js /config/workspace/astra-tik-tok/src/pages\n\n"
    },
    {
      "file": "astra-tik-tok/src/App.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 19
        }
      },
      "title": "Add routing magic to App.js",
      "description": "## Add structure to App.js\n\nIt's time to get App.js ready to do some real work.\n\nYou'll be making a few changes with this:\n* Importing the HashRouter, Route and Switch components\n* Adding a `<Hashrouter>` at the top of your App component\n* In the `<Hashrouter>`, inserting a Switch component to direct queries to the right place\n* Setting up routes for the home and upload pages.  Note you always want to have more specific routes (like /upload) first, then your more general matches later.  The first match \"wins\" so you can land in some frustration if you don't keep this in mind.\n\n```jsx\nimport { HashRouter, Route , Switch} from 'react-router-dom'\nimport Home from './pages/Home'\nimport Upload from './pages/Upload'\nimport './App.css'\n\nconst App = () => {\n  return (\n    <HashRouter>\n    <Switch>\n      <Route path= \"/upload\" component={Upload}/>\n      <Route path= \"/\" component={Home}/>\n    </Switch>\n  </HashRouter>\n  );\n}\n\nexport default App\n```",
      "line": 208
    },
    {
      "title": "Adding content to components",
      "description": "# ⚒️ Adding some Content to the Components\n\nIn this step you will work with React Components to understand how they work, returning HTML via the render() function.  Header and FollowersColumn React Components will be created to use in our app.\n\n**Objectives**\n1. A Header that is going to be consistent for the upload page and the home page\n2. A FollowersColumn column where we can see people that we are currently following\n3. A feed and a little box of suggested accounts"
    },
    {
      "title": "Create components directory",
      "description": "## Components setup\n\nHere, we'll create the directory for the application components, and create two component files, `Header.js` and `FollowersColumn.js`.\n\n>> mkdir /config/workspace/astra-tik-tok/src/components\n\n>> cp /config/workspace/resources/HeaderStart.js /config/workspace/astra-tik-tok/src/components/Header.js\n\n>> cp /config/workspace/resources/FollowersColumnStart.js /config/workspace/astra-tik-tok/src/components/FollowersColumn.js\n\nAlso bring in a file with basic styling for our initial setup.\n\n>> cp /config/workspace/resources/AppStart.css /config/workspace/astra-tik-tok/src/App.css\n\nFinally, install the packages needed to make everything work.\n\n>> yarn add axios @astrajs/collections faker"
    },
    {
      "title": "Check Header file",
      "file": "astra-tik-tok/src/components/Header.js",
      "description": "## Header.js\n\nThis file defines a basic header. All this component is doing is rendering a styled div that contains our `<h1>` element.  The \"return\" is what is sent back when this component is used in a layout.\n\n"
    },
    {
      "title": "Check FollowersColumn file",
      "file": "astra-tik-tok/src/components/FollowersColumn.js",
      "description": "## FollowersColumn.js\n\nSimilarly, this component will also be simple for now.\n\n"
    },
    {
      "title": "Add Header to App.js",
      "file": "astra-tik-tok/src/App.js",
      "description": "# Import header into App.js\n\nLet's import our new components into `App.js` and use them.\n\n```jsx\nimport Header from './components/Header'\n\n```\n",
      "line": 1
    },
    {
      "title": "Add a Header to the App component, under the <HashRouter> tag.",
      "file": "astra-tik-tok/src/App.js",
      "description": "### Add header to the HashRouter component\n\n```jsx\n   <Header />\n   \n```\n",
      "line": 11
    },
    {
      "title": "Style your components",
      "description": "## Styling with CSS\n\nYou need to make your new components pretty.  We'll do this using CSS styles which we've already defined in our styled divs. For now, we're just going to get basic 'grey-box' styling in place. We'll improve the styling later.\n\nLet's overwrite what's there with the components we want.\n\n>> cp /config/workspace/resources/AppStart.css /config/workspace/astra-tik-tok/src/App.css\n\n**Sections**\n* Add the flex styling to the container\n* Make the feed white\n* Make the suggested-box blue. \n* Set the background-color to yellow in the header class\n* Set css attributes for the .followers-column class",
      "file": "astra-tik-tok/src/App.css",
      "line": 1
    },
    {
      "file": "astra-tik-tok/src/pages/Home.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 26,
          "character": 20
        }
      },
      "description": "## Customize Home.js\n\nLet's import our `FollowersColumn.js` component into our `Home.js` page and break up the page into sections using our new styles.\n\n```jsx\nimport FollowersColumn from '../components/FollowersColumn'\n\nconst Home = () => {\n\n  return (\n    <>\n      <div className='container'>\n        <FollowersColumn />\n        <div className='feed'>\n  \n        </div>\n        <div className=\"suggested-box\">\n          <div className=\"section\">\n            <div className=\"suggested\">\n              <h2 className=\"bold\">Suggested accounts</h2>\n              <div className=\"break\" />\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n```",
      "line": 300
    },
    {
      "file": "astra-tik-tok/src/pages/Upload.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 41,
          "character": 2
        }
      },
      "description": "## Add Functionality to Upload.js\n\nIn the `Upload.js` page, we'll throw together a simple form that can be filled out. For now there will be plenty of filler information.\n\n>> cp /config/workspace/resources/Upload.js /config/workspace/astra-tik-tok/src/pages",
      "line": 336
    },
    {
      "title": "Start the server",
      "description": "## Start the Development Server\n\nCongrats! We now have a basic framework of our app. Let's run the dev server and take a look.\n\n>> yarn start\n\n[Visit your site](http://localhost:3000)\n\nWhen you're done, press Ctrl-C in the terminal to stop the process so we can move to the next piece."
    },
    {
      "title": "React Knowledge Check",
      "description": "Visit the [Knowledge Check](https://datastax.tahoe.appsembler.com/courses/course-v1:datastax+DSTEST+TRIAL/courseware/30db6dedcc9f4712ad9bae67c36e6b77/679cb5ad641e415d8f0f0fb19319b196/) for this section to make sure everything's clear.  See you when you get back!"
    }
  ]
}